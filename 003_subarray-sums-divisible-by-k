link - https://leetcode.com/problems/subarray-sums-divisible-by-k/
submission link - https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/submissions/1325345215/
code - 
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        long long sum=0;
        for(int i=n-2;i>=0;i--){
            if(prices[i+1]>prices[i])
                sum+=prices[i+1]-prices[i];
        }
        return sum;
    }
};

class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        int ans = 0 , sum = 0;
        mp[0]++;
        for(auto &el : nums){
            sum += el;
            sum %= k;
            sum = (sum + k)%k;
            ans += mp[sum];
            mp[(sum + k)%k]++;
        }
        return ans;
    }
};
// 0+1+2+0+3+2
// 4 , 4, 4, 2, 4, 3
