link - https://leetcode.com/problems/diameter-of-binary-tree
code : 
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int ans = 0;
public:
    int fun(TreeNode* node){
        if(!node)   return 0;
        int left = fun(node->left);
        int right = fun(node->right);
        ans = max(left + right + 1, ans);
        return 1 + max(left , right);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        fun(root);
        return ans-1;
    }
};
