link - https://leetcode.com/problems/symmetric-tree/description/
code :

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // vector<int> left, right;
    bool isSymmetric(TreeNode* root) {
        if(!root)   return true;
        return check(root->left ,root->right);
    }
    bool check(TreeNode* l, TreeNode*r)
    {
        if(!l && !r)    return true;
        if(!l || !r)    return false;
        if(l->val!=r->val)    
            return false;
        
        if(l->val==r->val)
        {
            int ans1=check(l->left, r->right);
            int ans2=check(l->right, r->left);
            return (ans1&&ans2);
        }
        return 0;
    }
    
};













